name: Build
on:
  push:
    branches:
      - main
    paths-ignore:
      - "*.md"
      - "LICENSE"
      - "NOTICE"
  pull_request:
    paths-ignore:
      - "*.md"
      - "LICENSE"
      - "NOTICE"
jobs:
  build:
    name: Build
    runs-on: ubuntu-18.04
    steps:
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - name: Checkout code
        uses: actions/checkout@v2
      - name: yaml-lint
        uses: ibiqlik/action-yamllint@v3
      - name: Run unit tests
        run: make tests
      - name: Upload code coverage
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.txt
      - name: Run integration tests
        run: make integration-tests
      - name: Dry-run release snapshot
        uses: goreleaser/goreleaser-action@v2
        with:
          version: v0.148.0
          args: release --snapshot --skip-publish --rm-dist
      - name: Setup Docker
        run: |
          echo "Setting up Docker"
          sudo apt-get update -y
          sudo apt-get install \
             apt-transport-https \
             ca-certificates \
             curl \
             gnupg-agent \
             software-properties-common -y
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository \
             "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
             $(lsb_release -cs) \
             stable"
          sudo apt-get update -y
          sudo apt-get install docker-ce docker-ce-cli containerd.io -y
          sudo curl -L https://github.com/docker/compose/releases/download/1.27.4/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
      - name: docker build
        run: |
          sudo docker build https://github.com/seconize-co/kube-bench
      - name: Docker Push to Azure Container Registry
        run: |
          sudo apt install gnupg2 pass -y
          echo ${{ secrets.ACR_PWD }} | docker login --username seconize --password-stdin seconize.azurecr.io
          sudo docker tag sze-k8s-audit seconize.azurecr.io/sensor/sze-k8s-audit
          sudo docker push seconize.azurecr.io/sensor/sze-k8s-audit
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: '#3278BD'
          SLACK_MESSAGE: 'Docker Image Push completed '
          SLACK_TITLE: Docker Image Build
          SLACK_USERNAME: seconize
